/*! \page ProgrammerSetup Setting up for programming JeVois


This tutorial will help you get setup for programming JeVois.

If all you want to do is use existing bundled machine vision algorithms, and possibly develop new modules in Python
only, then simply get and flash a microSD image from http://jevois.org/start and check out:

- \ref UserGettingStarted
- \ref ProgrammerPythonLive

The programming environment is Ubuntu 64-bit, version 17.04 (zesty) or 16.04 LTS (xenial).

It is generally ok to setup the programming environment in a virtual machine (e.g., VirtualBox). Just beware that you
may have to resolve issues having to do with granting proper access to either the video camera or the microSD card to
the virtual machine. See \ref Virtualbox for more info.

Upgrading
---------

When upgrading to a new version of JeVois (for example, from 1.1 to 1.2), we recommend deleting all previous generated
files and rebuilding both \b /jevois for host and the staging area for platform in \b var/lib/jevois-build and \b
/var/lib/jevois-microsd as follows:

\verbatim
sudo rm -rf /jevois /usr/lib/jevois-build/usr /var/lib/jevois-microsd
\endverbatim

Then rebuild everything (except the Linux kernel, platform O.S., etc) as detailed below.

\note If upgrading from version 1.0, you need to delete the files that were installed in different locations:
- remove all OpenCV files in /usr/local/include/opencv*, /usr/local/lib/libopencv*, /usr/local/share/opencv
- remove JeVois files /usr/bin/jevois*
- remove JeVois libraries /usr/lib/libjevois*
- remove /jevois

To upgrade previously installed JeVois Debian packages (jevois-sdk-dev and dependencies), do as follows:

\verbatim
sudo apt update
sudo apt upgrade
\endverbatim

Installing Debian packages the first time
-----------------------------------------

- Start by checking out \ref ProgrammerSource

- Unless you want to recompile the Linux kernel that runs inside JeVois (most people would not want to do that), or the
  operating system and Unix utilities in JeVois (most people would also not want that), follow the instructions at
  http://jevois.usc.edu and install package \b jevois-sdk-dev which will pull in all other required packages as
  dependencies.

- If you do want to recompile the kernel or the operating system, you need to install everything from source as detailed
  in the [INSTALL file of the jevois repository](https://github.com/jevois/jevois/blob/master/INSTALL).

- Now review the \ref ProgrammerOrganization to get accustomed with where the various files are.

Getting the latest source code from GitHub
------------------------------------------

\verbatim
cd
git clone https://github.com/jevois/jevois.git
git clone https://github.com/jevois/jevoisbase.git
git clone https://github.com/jevois/jevois-sdk.git
git clone https://github.com/jevois/samplemodule.git
git clone https://github.com/jevois/samplepythonmodule.git
git clone https://github.com/jevois/jevois-tutorials.git
\endverbatim

\note If upgrading, cd to each directory instead and run a `git pull` command to bring your copy up to date with the
master repository.

Before compiling for the first time: Getting the contributed packages
---------------------------------------------------------------------

This step is automatic as of \jvversion{1.5} and can be skipped for that version and later.

The directory <b>jevoisbase/Contrib</b> is for a collection of contributed source code packages.

Before you attempt to compile jevoisbase the first time, you should download and patch those contributed packages, as
follows:

\verbatim
cd ~/jevoisbase/Contrib
./reinstall.sh
\endverbatim

Compiling JeVois, JeVoisBase, samplemodule
------------------------------------------

- First see \ref CompilingJeVois

- Then see \ref CompilingJeVoisBase

- For \b samplemodule, the compilation instructions and scripts are the same as for \b jevoisbase

- Finally see \ref FlashingToSD

- When you are ready to write new modules from scratch, just read the whole \ref Programmer.


\note If you recompile jevois and jevoisbase from the latest version from GitHub, then you should also flash those
versions to microSD before you proceed with compiling and installing your own modules to microSD. Otherwise, you may end
up with older versions of jevois and jevoisbase on your microSD (if it was installed from a microSD image from
http://jevois.org/start) which may not work with your new module compiled against the latest version of jevois from
GitHub. See \ref FlashingToSD for details, especially the section: Pulling the latest from github and re-flashing - full
recompilation.

*/
